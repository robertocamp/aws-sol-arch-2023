INFO[0000] The stack at /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev will be processed in the following order for command plan:
Group 1
- Module /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev/vpc

Group 2
- Module /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev/eks

Group 3
- Module /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev/kubernetes-addons
 
WARN[0000] No double-slash (//) found in source URL /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-modules/vpc. Relative paths in downloaded Terraform code may not work.  prefix=[/Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev/vpc] 
aws_eip.this: Refreshing state... [id=eipalloc-0bf1b197dbd7d5520]
aws_vpc.this: Refreshing state... [id=vpc-086bd874771ee99bf]
aws_internet_gateway.this: Refreshing state... [id=igw-0e5dde705b073571f]
aws_subnet.public[0]: Refreshing state... [id=subnet-06f3441bd876c99d3]
aws_subnet.public[1]: Refreshing state... [id=subnet-0d413730b51616d2a]
aws_subnet.private[0]: Refreshing state... [id=subnet-0291c77b3e6da1c46]
aws_subnet.private[1]: Refreshing state... [id=subnet-0919b45ad1dcbdee9]
aws_route_table.public: Refreshing state... [id=rtb-02bc41aacf6f2276c]
aws_nat_gateway.this: Refreshing state... [id=nat-00ad81febcbe17345]
aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-0cad82d9ec88ef4b7]
aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-0cfe93bb6016d2936]
aws_route_table.private: Refreshing state... [id=rtb-03a8b1e2d734c4382]
aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-09067dd70cf82b12e]
aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-0aa75c453b6951d7e]

No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
time=2023-09-27T07:30:55-05:00 level=warning msg=No double-slash (//) found in source URL /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-modules/vpc. Relative paths in downloaded Terraform code may not work. prefix=[/Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev/vpc] 
WARN[0004] No double-slash (//) found in source URL /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-modules/eks. Relative paths in downloaded Terraform code may not work.  prefix=[/Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev/eks] 
aws_iam_role.eks: Refreshing state... [id=dev-demo-eks-cluster]
aws_iam_role.nodes: Refreshing state... [id=dev-demo-eks-nodes]
aws_iam_role_policy_attachment.nodes["3"]: Refreshing state... [id=dev-demo-eks-nodes-20230927111941198500000005]
aws_iam_role_policy_attachment.nodes["1"]: Refreshing state... [id=dev-demo-eks-nodes-20230927111941110900000003]
aws_iam_role_policy_attachment.nodes["4"]: Refreshing state... [id=dev-demo-eks-nodes-20230927111941030900000002]
aws_iam_role_policy_attachment.nodes["2"]: Refreshing state... [id=dev-demo-eks-nodes-20230927111941030800000001]
aws_iam_role_policy_attachment.eks: Refreshing state... [id=dev-demo-eks-cluster-20230927111941110900000004]
aws_eks_cluster.this: Refreshing state... [id=dev-demo]
data.tls_certificate.this[0]: Reading...
aws_eks_node_group.this["general"]: Refreshing state... [id=dev-demo:general]
data.tls_certificate.this[0]: Read complete after 0s [id=34b882443ccd2d1a84de1dbac994b28b7f371f17]
aws_iam_openid_connect_provider.this[0]: Refreshing state... [id=arn:aws:iam::240195868935:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/911E0D8632942367F71337CE6712E536]

No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
time=2023-09-27T07:30:59-05:00 level=warning msg=No double-slash (//) found in source URL /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-modules/eks. Relative paths in downloaded Terraform code may not work. prefix=[/Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev/eks] 
WARN[0007] No double-slash (//) found in source URL /Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-modules/kubernetes-addons. Relative paths in downloaded Terraform code may not work.  prefix=[/Users/robert/go/src/github.com/aws-sol-arch-2023/eks/infrastructure-live-v4/dev/kubernetes-addons] 

Initializing the backend...

Successfully configured the backend "local"! Terraform will automatically
use this backend unless the backend configuration changes.

Initializing provider plugins...
- Finding latest version of hashicorp/aws...
- Finding hashicorp/helm versions matching "~> 2.9"...
- Installing hashicorp/aws v5.18.1...
- Installed hashicorp/aws v5.18.1 (signed by HashiCorp)
- Installing hashicorp/helm v2.11.0...
- Installed hashicorp/helm v2.11.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
data.aws_eks_cluster_auth.eks: Reading...
data.aws_iam_openid_connect_provider.this: Reading...
data.aws_eks_cluster.eks: Reading...
data.aws_eks_cluster_auth.eks: Read complete after 0s [id=dev-demo]
data.aws_iam_openid_connect_provider.this: Read complete after 0s [id=arn:aws:iam::240195868935:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/911E0D8632942367F71337CE6712E536]
data.aws_iam_policy_document.cluster_autoscaler: Reading...
data.aws_iam_policy_document.cluster_autoscaler: Read complete after 0s [id=2380782331]
data.aws_eks_cluster.eks: Read complete after 0s [id=dev-demo]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_policy.cluster_autoscaler[0] will be created
  + resource "aws_iam_policy" "cluster_autoscaler" {
      + arn         = (known after apply)
      + id          = (known after apply)
      + name        = "dev-demo-cluster-autoscaler"
      + name_prefix = (known after apply)
      + path        = "/"
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "autoscaling:DescribeAutoScalingGroups",
                          + "autoscaling:DescribeAutoScalingInstances",
                          + "autoscaling:DescribeLaunchConfigurations",
                          + "autoscaling:DescribeScalingActivities",
                          + "ec2:DescribeInstanceTypes",
                          + "ec2:DescribeLaunchTemplateVersions",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                  + {
                      + Action   = [
                          + "autoscaling:SetDesiredCapacity",
                          + "autoscaling:TerminateInstanceInAutoScalingGroup",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id   = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_iam_role.cluster_autoscaler[0] will be created
  + resource "aws_iam_role" "cluster_autoscaler" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRoleWithWebIdentity"
                      + Condition = {
                          + StringEquals = {
                              + "oidc.eks.us-west-2.amazonaws.com/id/911E0D8632942367F71337CE6712E536:sub" = "system:serviceaccount:kube-system:cluster-autoscaler"
                            }
                        }
                      + Effect    = "Allow"
                      + Principal = {
                          + Federated = "arn:aws:iam::240195868935:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/911E0D8632942367F71337CE6712E536"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "dev-demo-cluster-autoscaler"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)
    }

  # aws_iam_role_policy_attachment.cluster_autoscaler[0] will be created
  + resource "aws_iam_role_policy_attachment" "cluster_autoscaler" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = "dev-demo-cluster-autoscaler"
    }

  # helm_release.cluster_autoscaler[0] will be created
  + resource "helm_release" "cluster_autoscaler" {
      + atomic                     = false
      + chart                      = "cluster-autoscaler"
      + cleanup_on_fail            = false
      + create_namespace           = false
      + dependency_update          = false
      + disable_crd_hooks          = false
      + disable_openapi_validation = false
      + disable_webhooks           = false
      + force_update               = false
      + id                         = (known after apply)
      + lint                       = false
      + manifest                   = (known after apply)
      + max_history                = 0
      + metadata                   = (known after apply)
      + name                       = "autoscaler"
      + namespace                  = "kube-system"
      + pass_credentials           = false
      + recreate_pods              = false
      + render_subchart_notes      = true
      + replace                    = false
      + repository                 = "https://kubernetes.github.io/autoscaler"
      + reset_values               = false
      + reuse_values               = false
      + skip_crds                  = false
      + status                     = "deployed"
      + timeout                    = 300
      + verify                     = false
      + version                    = "9.28.0"
      + wait                       = true
      + wait_for_jobs              = false

      + set {
          + name  = "autoDiscovery.clusterName"
          + value = "dev-demo"
        }
      + set {
          + name  = "rbac.serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn"
          + value = (known after apply)
        }
      + set {
          + name  = "rbac.serviceAccount.name"
          + value = "cluster-autoscaler"
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.